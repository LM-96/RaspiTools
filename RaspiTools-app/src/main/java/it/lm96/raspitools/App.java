/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package it.lm96.raspitools;

import java.io.IOException;

import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;

import it.lm96.raspitools.config.ConfigReader;
import it.lm96.raspitools.config.FileConfigReader;
import it.lm96.raspitools.led.PiLed;
import it.lm96.raspitools.sonar.PiSonar;

public class App {
	
	private final static GpioController CONTROLLER = GpioFactory.getInstance();
	
    public static void main(String[] args) throws InterruptedException, IOException {
    	
    	ConfigReader config = FileConfigReader.newFileConfigReader("config.ini");
    	if(!config.load()) {
    		System.out.println("No configuration file found. Will be used default configuration.");
    	} else {
    		System.out.println("Configuration file opened");
    	}
    	
       PiLed led = PiLed.getLed(CONTROLLER, config.getLedPin());
       if(led.isOn())
    	   led.powerOff();
       
       PiSonar sonar = PiSonar.getSonar(CONTROLLER, config.getTriggerPin(), config.getEchoPin());
       double distance = 0, criticalDistance = config.getCriticalDistance();
       long delay = config.getDelayMillis();
       
       while(true) {
    	   distance = sonar.readDistanceInCm();
    	   System.out.println("Readed new distance: " + distance);
    	   if(distance < criticalDistance) {
    		   if(led.isOff())
    			   led.powerOn();
    	   } else {
    		   if(led.isOn())
    			   led.powerOff();
    	   }
    	   Thread.sleep(delay);
    		   
       }
    }
}
